<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-13T10:36:07 PST" name="Default suite" finished-at="2020-12-13T10:36:19 PST" duration-ms="11988">
    <groups>
    </groups>
    <test started-at="2020-12-13T10:36:07 PST" name="Default test" finished-at="2020-12-13T10:36:19 PST" duration-ms="11988">
      <class name="com.deckofcardsapi.DeckOfCardsApiPositiveTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.deckofcardsapi.DeckOfCardsApiPositiveTests@3bd40a57]" started-at="2020-12-13T10:36:08 PST" name="setup" finished-at="2020-12-13T10:36:09 PST" duration-ms="987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createNewDeck()[pri:10, instance:com.deckofcardsapi.DeckOfCardsApiPositiveTests@3bd40a57]" started-at="2020-12-13T10:36:09 PST" name="createNewDeck" finished-at="2020-12-13T10:36:14 PST" duration-ms="5561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewDeck -->
        <test-method signature="createNewDeckWithJoker()[pri:20, instance:com.deckofcardsapi.DeckOfCardsApiPositiveTests@3bd40a57]" started-at="2020-12-13T10:36:14 PST" name="createNewDeckWithJoker" finished-at="2020-12-13T10:36:15 PST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewDeckWithJoker -->
        <test-method signature="drawCardsFromDeck()[pri:30, instance:com.deckofcardsapi.DeckOfCardsApiPositiveTests@3bd40a57]" started-at="2020-12-13T10:36:15 PST" name="drawCardsFromDeck" finished-at="2020-12-13T10:36:15 PST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- drawCardsFromDeck -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.deckofcardsapi.DeckOfCardsApiPositiveTests@3bd40a57]" started-at="2020-12-13T10:36:15 PST" name="tearDown" finished-at="2020-12-13T10:36:15 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.deckofcardsapi.DeckOfCardsApiPositiveTests -->
      <class name="com.deckofcardsapi.DeckOfCardsApiNegativeTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:15 PST" name="setup" finished-at="2020-12-13T10:36:15 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createDeckAndDrawZeroCards()[pri:10, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:15 PST" name="createDeckAndDrawZeroCards" finished-at="2020-12-13T10:36:16 PST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDeckAndDrawZeroCards -->
        <test-method signature="createDeckAndDrawAllCards()[pri:20, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:16 PST" name="createDeckAndDrawAllCards" finished-at="2020-12-13T10:36:17 PST" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDeckAndDrawAllCards -->
        <test-method signature="createDeckAndOverDraw()[pri:30, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:17 PST" name="createDeckAndOverDraw" finished-at="2020-12-13T10:36:18 PST" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDeckAndOverDraw -->
        <test-method signature="drawCardsOnEmptyDeck()[pri:40, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:18 PST" name="drawCardsOnEmptyDeck" finished-at="2020-12-13T10:36:19 PST" duration-ms="987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- drawCardsOnEmptyDeck -->
        <test-method signature="inputInvalidCountValue()[pri:50, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:19 PST" name="inputInvalidCountValue" finished-at="2020-12-13T10:36:19 PST" duration-ms="767" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.deckofcardsapi.supportclasses.DeckOfCardsApiSupportMethods.drawCardsFromDeck(DeckOfCardsApiSupportMethods.java:29)
at com.deckofcardsapi.DeckOfCardsApiNegativeTests.inputInvalidCountValue(DeckOfCardsApiNegativeTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inputInvalidCountValue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.deckofcardsapi.DeckOfCardsApiNegativeTests@fdefd3f]" started-at="2020-12-13T10:36:19 PST" name="tearDown" finished-at="2020-12-13T10:36:19 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.deckofcardsapi.DeckOfCardsApiNegativeTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
